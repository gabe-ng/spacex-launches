{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","index.js","spacexlogo.png"],"names":["LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","Link","to","concat","MissionKey","LAUNCHES_QUERY","gql","_templateObject","Launches","Fragment","components_MissionKey","react_apollo_browser_umd","query","loading","error","data","react_loader_spinner_default","type","height","width","color","console","log","launches","map","components_LaunchItem","key","Component","LAUNCH_QUERY","Launch_templateObject","Launch","this","props","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","BrowserRouter","src","Logo","alt","style","display","margin","Route","exact","path","component","ReactDOM","render","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.141542af.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nconst LaunchItem = ({ launch: {\n    flight_number,\n    mission_name,\n    launch_date_local,\n    launch_success\n}}) => {\n  return (\n    <div className=\"card card-body mb-3\">\n     <div className=\"row\">\n        <div className=\"col-md-9\">\n            <h4>Mission <span className={classNames({\n                'text-success': launch_success,\n                'text-danger': !launch_success,\n            })}>{ mission_name }</span></h4>\n            <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{ launch_date_local }</Moment></p>\n        </div>\n        <div className=\"col-md-3\">\n            <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\n        </div>\n     </div>\n    </div>\n  )\n}\n\nexport default LaunchItem;\n","import React from 'react'\n\nconst MissionKey = () => {\n  return (\n    <div className=\"my-3\">\n        <p>\n            <span className=\"px-3 mr-2 bg-success\" /> = Success\n        </p>\n        <p>\n            <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n        </p>\n    </div>\n  )\n}\n\nexport default MissionKey\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Loader from 'react-loader-spinner';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\n\nconst LAUNCHES_QUERY = gql`\n    query LauchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nclass Launches extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 my-3\">Launches</h1>\n        <MissionKey />\n        <Query query={LAUNCHES_QUERY}>\n            {\n                ({ loading, error, data }) => {\n                    if (loading) return <Loader type=\"RevolvingDot\" height=\"100\"\n                        width=\"100\" color=\"#FFFFFF\"/>\n                    if (error) console.log(error);\n\n                    return <React.Fragment>\n                        {\n                            data.launches.map(launch => \n                                <LaunchItem key={launch.flight_number} launch={launch}/>\n                            )\n                        }\n                    </React.Fragment>\n                }\n            }\n        </Query>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Launches;\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport classNames from \"classnames\";\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nclass Launch extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n\n    return (\n      <React.Fragment>\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) return <Loader type=\"RevolvingDot\" height=\"100\"\n              width=\"100\" color=\"#FFFFFF\" />\n            if (error) console.log(error);\n\n            const {\n              mission_name,\n              launch_year,\n              flight_number,\n              launch_success,\n              rocket: { rocket_id, rocket_name, rocket_type }\n            } = data.launch;\n\n            return (\n              <div>\n                <h1 className=\"display-4 my-3\">\n                  <span className=\"text-dark\">Mission: {mission_name}</span>\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Flight Number: {flight_number}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {launch_year}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Successful:{\" \"}\n                    <span\n                      className={classNames({\n                        \"text-success\": launch_success,\n                        \"text-danger\": !launch_success\n                      })}\n                    >\n                      {launch_success ? \"Yes\" : \"No\"}\n                    </span>\n                  </li>\n                </ul>\n                <h4 className=\"my-3\">Rocket Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                  <li className=\"list-group-item\">\n                    Rocket Name: {rocket_name}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Rocket Type: {rocket_type}\n                  </li>\n                </ul>\n                <hr />\n                <Link to=\"/\" className=\"btn btn-secondary\">\n                  Back\n                </Link>\n              </div>\n            );\n          }}\n        </Query>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Launch;\n","import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\n\nimport './App.css';\nimport Logo from './spacexlogo.png';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nclass App extends Component {\n  render() {\n    return <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img src={Logo} alt=\"SpaceX\" style={{ width: 300, display: \"block\", margin: \"auto\" }} />\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n        </div>\n      </Router>\n    </ApolloProvider>;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/spacexlogo.ab10d000.png\";"],"sourceRoot":""}